{
  "backup_data_uid": "47e6ae838d2766c0",
  "compile_deps": {
    "compiler": {
      "local": "yes",
      "name": "C++ compiler",
      "sort": 0,
      "tags": "compiler,lang-cpp"
    },
    "lib-mlperf_loadgen": {
      "local": "yes",
      "name": "MLPerf Inference LoadGen library",
      "sort": 60,
      "tags": "lib,mlperf,loadgen,static"
    },
    "lib-xopenme": {
      "local": "yes",
      "name": "xOpenME library",
      "sort": 100,
      "tags": "lib,xopenme"
    },
    "lib-protobuf-host": {
      "force_target_as_host": "yes",
      "local": "yes",
      "name": "ProtoBuf host compiler",
      "skip_installed": {
        "android": "yes",
        "win": "yes"
      },
      "sort": 115,
      "tags": "lib,protobuf-host,for.qaic"
    },
    "lib-kilt": {
      "local": "yes",
      "name": "Krai Inference Library",
      "sort": 0,
      "tags": "lib,kilt"
    }
  },
  "compiler_add_include_as_env_from_deps": [
    "CK_ENV_LIB_STDCPP_INCLUDE",
    "CK_ENV_LIB_STDCPP_INCLUDE_EXTRA",
    "CK_ENV_LIB_TF_INCLUDE0",
    "CK_ENV_LIB_TF_INCLUDE1",
    "CK_ENV_LIB_TF_INCLUDE2",
    "CK_ENV_LIB_MLPERF_LOADGEN_INCLUDE"
  ],
  "compiler_env": "CK_CXX",
  "compiler_flags_as_env": "$<<CK_COMPILER_FLAG_CPP17>>$ -O3 -std=c++17 -Wall -Wno-sign-compare $<<CK_EXTRA_COMPILER_DEPS0>>$ $<<CK_EXTRA_COMPILER_DEPS1>>$  $<<CK_EXTRA_COMPILER_DEPS2>>$  $<<CK_EXTRA_COMPILER_DEPS3>>$ -I/opt/qti-aic/dev/inc/ -I/opt/qti-aic/dev/inc/qaic-api-common -I$<<CK_ENV_LIB_QAIC_API>>$/install/ -I$<<CK_ENV_LIB_PROTOBUF_HOST>>$/include/ -I$<<CK_ENV_LIB_KILT>>$/include/plugins/nms-abp/ -I$<<CK_ENV_LIB_KILT>>$/include/benchmarks/standalone/object-detection/ -I$<<CK_ENV_LIB_KILT>>$/include/benchmarks/standalone/object-detection/config/ -I$<<CK_ENV_LIB_KILT>>$/include/devices/qaic/ -I$<<CK_ENV_LIB_KILT>>$/include/devices/qaic/api/master/ -I$<<CK_ENV_LIB_KILT>>$/include/config/env/ -I$<<CK_ENV_LIB_KILT>>$/include/config/ -I$<<CK_ENV_LIB_KILT>>$/include/devices/qaic/config/ -I$<<CK_ENV_LIB_KILT>>$/include/benchmarks/harness/config/",
  "data_name": "object-detection-qaic-loadgen",
  "extra_ld_vars": "-L$<<CK_ENV_LIB_MLPERF_LOADGEN_LIB>>$ -L$<<CK_ENV_LIB_KILT>>$/lib/ -lmlperf_loadgen -ldl -lpthread -lprotobuf -lQAic",
  "linker_add_lib_as_env": [
    "CK_CXX_EXTRA",
    "CK_ENV_LIB_STDCPP_DYNAMIC"
  ],
  "main_language": "cpp",
  "need_cpu_info": "yes",
  "only_for_target_os_tags": [
    "linux",
    "android"
  ],
  "pass_env_to_resolve": "yes",
  "process_in_tmp": "yes",
  "program": "yes",
  "run_cmds": {
    "coco": {
      "ignore_return_code": "no",
      "run_time": {
        "fine_grain_timer_file": "tmp-ck-timer.json",
        "post_process_via_ck": {
          "data_uoa": "object-detection",
          "module_uoa": "script",
          "script_name": "loadgen_postprocess"
        },
        "pre_process_via_ck": {
          "data_uoa": "object-detection",
          "module_uoa": "script",
          "script_name": "loadgen_preprocess"
        },
        "run_cmd_main_env": "env",
        "run_cmd_main": "../launcher.sh $#BIN_FILE#$",
        "run_input_files": [
          "$<<CK_ENV_LIB_STDCPP_DYNAMIC>>$"
        ],
        "run_output_files": [
          "mlperf_log_accuracy.json",
          "mlperf_log_detail.txt",
          "mlperf_log_summary.txt",
          "mlperf_log_trace.json"
        ]
      }
    },
    "openimages": {
      "ignore_return_code": "no",
      "run_time": {
        "fine_grain_timer_file": "tmp-ck-timer.json",
        "post_process_via_ck": {
          "data_uoa": "object-detection",
          "module_uoa": "script",
          "script_name": "loadgen_postprocess_openimages"
        },
        "pre_process_via_ck": {
          "data_uoa": "object-detection",
          "module_uoa": "script",
          "script_name": "loadgen_preprocess"
        },
        "run_cmd_main_env": "env",
        "run_cmd_main": "../launcher.sh $#BIN_FILE#$",
        "run_input_files": [
          "$<<CK_ENV_LIB_STDCPP_DYNAMIC>>$"
        ],
        "run_output_files": [
          "mlperf_log_accuracy.json",
          "mlperf_log_detail.txt",
          "mlperf_log_summary.txt",
          "mlperf_log_trace.json"
        ]
      }
    }
  },
  "run_deps": {
    "dataset": {
      "force_target_as_host": "yes",
      "local": "yes",
      "name": "Preprocessed images",
      "no_tags": "calibration",
      "sort": 20,
      "tags": "dataset,object-detection,preprocessed,validation"
    },
    "lib-python-matplotlib": {
      "force_target_as_host": "yes",
      "local": "yes",
      "name": "Python Matplotlib library",
      "sort": 60,
      "tags": "lib,python-package,matplotlib"
    },
    "lib-python-numpy": {
      "force_target_as_host": "yes",
      "local": "yes",
      "name": "Python NumPy library",
      "sort": 40,
      "tags": "lib,python-package,numpy"
    },
    "mlperf-inference-src": {
      "add_to_path": "no",
      "force_target_as_host": "yes",
      "local": "yes",
      "name": "MLPerf Inference source",
      "sort": 45,
      "no_tags": "for.aimet,nvidia-coco",
      "tags": "mlperf,inference,source"
    },
    "python": {
      "force_target_as_host": "yes",
      "local": "yes",
      "name": "Python interpreter",
      "sort": 30,
      "tags": "compiler,lang-python"
    },
    "tool-coco": {
      "force_target_as_host": "yes",
      "local": "yes",
      "name": "Python API for COCO",
      "sort": 15,
      "tags": "tool,coco"
    },
    "weights": {
      "force_target_as_host": "yes",
      "local": "yes",
      "name": "Object Detection model",
      "sort": 20,
      "tags": "model,qaic,compiled"
    }
  },
  "run_vars": {
    "CK_ANNOTATIONS_OUT_DIR": "annotations",
    "CK_BATCH_COUNT": 1,
    "CK_BATCH_SIZE": 1,
    "CK_DETECTIONS_OUT_DIR": "detections",
    "CK_LOADGEN_BUFFER_SIZE": 1024,
    "CK_LOADGEN_DATASET_SIZE": 0,
    "CK_LOADGEN_MODE": "",
    "CK_LOADGEN_SCENARIO": "SingleStream",
    "CK_LOADGEN_SUPPORT": "YES",
    "CK_LOADGEN_TRIGGER_COLD_RUN": "yes",
    "CK_LOADGEN_USER_CONF": "user.conf",
    "CK_MLPERF_PRE_SCHINDLER": "YES",
    "CK_MLPERF_PRE_USER_CONF_AND_AUDIT_CONFIG": "YES",
    "CK_PREPROCESSED_OUT_DIR": "preprocessed",
    "CK_RESULTS_OUT_DIR": "results",
    "CK_SILENT_MODE": 0,
    "CK_SKIP_IMAGES": 0,
    "CK_ENV_QAIC_INPUT_COUNT": 1,
    "CK_ENV_QAIC_DEVICE_CONFIG_FUTURE": "0,0,1,2,3:0,4,5,6,7:0,8,9,10,11:0,12,13,14,15:0,16,17,18,19",
    "CK_ENV_QAIC_DATASOURCE_CONFIG_FUTURE": "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19"
  },
  "skip_bin_ext": "yes",
  "source_files": [
    "$<<CK_ENV_LIB_KILT>>$/include/benchmarks/harness/harness.cpp",
    "$<<CK_ENV_LIB_KILT>>$/include/devices/qaic/api/master/QAicInfApi.cpp"
  ],
  "tags": [
    "object-detection",
    "qaic",
    "loadgen",
    "lang-cpp"
  ],
  "target_file": "detect",
  "template": "yes",
  "template_type": "Object Detection via TFLite (C++)"
}
