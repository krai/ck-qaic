#!/bin/bash

_category="edge"
DOCKER=${DOCKER:-no}
DOCKER_OS=${DOCKER_OS:-ubuntu}
WORKLOADS=${WORKLOADS:-resnet50,bert,retinanet} # DEPRECATED: ssd_resnet34,ssd_mobilenet.

. run_common.sh

RUN_CMD_COMMON_SUFFIX="${RUN_CMD_COMMON_SUFFIX_DEFAULT} ${RUN_CMD_COMMON_SUFFIX} ${POWER_YES}"

# ResNet50.
OFFLINE_TARGET_QPS=$(getQPS "${RESNET50_OFFLINE_TARGET_QPS}")
SINGLESTREAM_TARGET_LATENCY=$(getLatency "${RESNET50_SINGLESTREAM_TARGET_LATENCY}")
MULTISTREAM_TARGET_LATENCY=$(getLatency "${RESNET50_MULTISTREAM_TARGET_LATENCY}")
MULTISTREAM_QUERY_COUNT=$(getQueryCount "${MULTISTREAM_TARGET_LATENCY}")

RUN_CMD_PREFIX="$RUN_CMD_PREFIX_RESNET50 $CMD_QUOTE"
RUN_CMD_SUFFIX="$RUN_CMD_COMMON_SUFFIX $RUN_CMD_SUFFIX_RESNET50 ${CMD_QUOTE}"

CMD="\
${RUN_CMD_PREFIX} \
ck run cmdgen:benchmark.image-classification.qaic-loadgen --verbose \
--sut=$SUT --sdk=$SDK_VER --model=resnet50 \
${_RUN_TYPES} \
--singlestream_target_latency=$SINGLESTREAM_TARGET_LATENCY \
--multistream_target_latency=$MULTISTREAM_TARGET_LATENCY \
--multistream_query_count=$MULTISTREAM_QUERY_COUNT \
--target_qps=$OFFLINE_TARGET_QPS \
${RUN_CMD_SUFFIX}"
enabled resnet50 && RUN "$CMD"

# SSD-MobileNet-v1.
OFFLINE_TARGET_QPS=$(getQPS "${SSD_MOBILENET_OFFLINE_TARGET_QPS}")
SINGLESTREAM_TARGET_LATENCY=$(getLatency "${SSD_MOBILENET_SINGLESTREAM_TARGET_LATENCY}")
MULTISTREAM_TARGET_LATENCY=$(getLatency "${SSD_MOBILENET_MULTISTREAM_TARGET_LATENCY}")
MULTISTREAM_QUERY_COUNT=$(getQueryCount "${MULTISTREAM_TARGET_LATENCY}")

RUN_CMD_PREFIX="$RUN_CMD_PREFIX_SSD_MOBILENET $CMD_QUOTE"
RUN_CMD_SUFFIX="$RUN_CMD_COMMON_SUFFIX $RUN_CMD_SUFFIX_SSD_MOBILENET ${CMD_QUOTE}"

CMD="\
${RUN_CMD_PREFIX} \
ck run cmdgen:benchmark.object-detection-small.qaic-loadgen --verbose \
--sut=$SUT --sdk=$SDK_VER --model=ssd_mobilenet \
${_RUN_TYPES} \
--singlestream_target_latency=$SINGLESTREAM_TARGET_LATENCY \
--multistream_target_latency=$MULTISTREAM_TARGET_LATENCY \
--multistream_query_count=$MULTISTREAM_QUERY_COUNT \
--target_qps=$OFFLINE_TARGET_QPS \
${RUN_CMD_SUFFIX}"
enabled ssd_mobilenet && RUN "$CMD"

# SSD-ResNet34.
OFFLINE_TARGET_QPS=$(getQPS "${SSD_RESNET34_OFFLINE_TARGET_QPS}")
SINGLESTREAM_TARGET_LATENCY=$(getLatency "${SSD_RESNET34_SINGLESTREAM_TARGET_LATENCY}")
MULTISTREAM_TARGET_LATENCY=$(getLatency "${SSD_RESNET34_MULTISTREAM_TARGET_LATENCY}")
MULTISTREAM_QUERY_COUNT=$(getQueryCount "${MULTISTREAM_TARGET_LATENCY}")

RUN_CMD_PREFIX="$RUN_CMD_PREFIX_SSD_RESNET34 $CMD_QUOTE"
RUN_CMD_SUFFIX="$RUN_CMD_COMMON_SUFFIX $RUN_CMD_SUFFIX_SSD_RESNET34 ${CMD_QUOTE}"

CMD="\
${RUN_CMD_PREFIX} \
ck run cmdgen:benchmark.object-detection-large.qaic-loadgen --verbose \
--sut=$SUT --sdk=$SDK_VER --model=ssd_resnet34 \
${_RUN_TYPES} \
--singlestream_target_latency=$SINGLESTREAM_TARGET_LATENCY \
--multistream_target_latency=$MULTISTREAM_TARGET_LATENCY \
--multistream_query_count=$MULTISTREAM_QUERY_COUNT \
--target_qps=$OFFLINE_TARGET_QPS \
${RUN_CMD_SUFFIX}"
enabled ssd_resnet34 && RUN "$CMD"

# BERT-99% (mixed precision).
OFFLINE_TARGET_QPS=$(getQPS "${BERT99_OFFLINE_TARGET_QPS}")
OFFLINE_OVERRIDE_BATCH_SIZE=${BERT99_OFFLINE_OVERRIDE_BATCH_SIZE:-4096}
SINGLESTREAM_TARGET_LATENCY=$(getLatency "${BERT99_SINGLESTREAM_TARGET_LATENCY}")
MULTISTREAM_TARGET_LATENCY=$(getLatency "${BERT99_MULTISTREAM_TARGET_LATENCY}")
MULTISTREAM_QUERY_COUNT=$(getQueryCount "${MULTISTREAM_TARGET_LATENCY}")
MULTISTREAM_OVERRIDE_BATCH_SIZE=${BERT99_MULTISTREAM_OVERRIDE_BATCH_SIZE:-8}

RUN_CMD_PREFIX="$RUN_CMD_PREFIX_BERT99 $CMD_QUOTE"
RUN_CMD_SUFFIX="$RUN_CMD_COMMON_SUFFIX $RUN_CMD_SUFFIX_BERT99 ${CMD_QUOTE}"

CMD="\
${RUN_CMD_PREFIX} \
ck run cmdgen:benchmark.packed-bert.qaic-loadgen --verbose \
--sut=$SUT --sdk=$SDK_VER --model=bert-99 \
${_RUN_TYPES} \
--singlestream_target_latency=$SINGLESTREAM_TARGET_LATENCY \
--multistream_target_latency=$MULTISTREAM_TARGET_LATENCY \
--multistream_query_count=$MULTISTREAM_QUERY_COUNT \
--target_qps=$OFFLINE_TARGET_QPS \
--offline_override_batch_size=$OFFLINE_OVERRIDE_BATCH_SIZE \
--multistream_override_batch_size=$MULTISTREAM_OVERRIDE_BATCH_SIZE \
${RUN_CMD_SUFFIX}"
enabled bert && RUN "$CMD"

# RetinaNet.
OFFLINE_TARGET_QPS=$(getQPS "${RETINANET_OFFLINE_TARGET_QPS}")
SINGLESTREAM_TARGET_LATENCY=$(getLatency "${RETINANET_SINGLESTREAM_TARGET_LATENCY}")
MULTISTREAM_TARGET_LATENCY=$(getLatency "${RETINANET_MULTISTREAM_TARGET_LATENCY}")
MULTISTREAM_QUERY_COUNT=$(getQueryCount "${MULTISTREAM_TARGET_LATENCY}")

RUN_CMD_PREFIX="$RUN_CMD_PREFIX_RETINANET $CMD_QUOTE"
RUN_CMD_SUFFIX="$RUN_CMD_COMMON_SUFFIX $RUN_CMD_SUFFIX_RETINANET ${CMD_QUOTE}"

CMD="\
${RUN_CMD_PREFIX} \
ck run cmdgen:benchmark.object-detection.qaic-loadgen --verbose \
--sut=$SUT --sdk=$SDK_VER --model=retinanet \
${_RUN_TYPES} \
--singlestream_target_latency=$SINGLESTREAM_TARGET_LATENCY \
--multistream_target_latency=$MULTISTREAM_TARGET_LATENCY \
--multistream_query_count=$MULTISTREAM_QUERY_COUNT \
--target_qps=$OFFLINE_TARGET_QPS \
${RUN_CMD_SUFFIX}"
enabled retinanet && RUN "$CMD"
. run_end.sh

echo
echo "Done."
